{"version":3,"sources":["components/Modal/index.module.scss","pages/HomePage/components/CharactersItem/index.module.scss","pages/HomePage/index.module.scss","components/AppBar/index.module.scss","components/Filter/FilterInput/index.module.scss","pages/HomePage/components/CharactersList/index.module.scss","components/Pagination/index.module.scss","components/Filter/index.module.scss","types/store/characters.ts","hooks/useTypedSelector.ts","types/store/filter.ts","api/CharactersService.ts","store/actions/charactersActions.ts","store/actions/filterActions.ts","router/index.ts","store/actions/index.ts","hooks/useActions.ts","components/Filter/FilterSelect/index.tsx","components/Filter/FilterInput/index.tsx","components/Filter/index.tsx","pages/HomePage/components/CharactersItem/index.tsx","utils/capitalize.ts","pages/HomePage/components/CharactersList/index.tsx","components/Pagination/index.tsx","components/Modal/index.tsx","pages/HomePage/index.tsx","components/AppRouter/index.tsx","components/AppBar/logo.jpg","components/AppBar/index.tsx","App.tsx","store/reducers/charactersReducer.ts","store/reducers/filterReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","CharactersActionEnum","useTypedSelector","useSelector","FilterActionEnum","CharactersService","params","axios","get","gender","status","id","CharactersActionCreators","setCharacters","characters","type","SET_CHARACTERS","payload","setSelectedCharacter","character","SET_SELECTED_CHARACTER","setIsLoading","isLoading","SET_IS_LOADING","setError","error","SET_ERROR","setPagesCount","count","SET_PAGES_COUNT","setCurrentPage","page","SET_CURRENT_PAGE","setIsModalOpen","isOpen","SET_IS_MODAL_OPEN","fetchCharacters","queryParams","dispatch","a","getCharacters","response","data","info","pages","results","fetchSingleCharacter","getSingleCharacter","console","log","RouteNames","FilterActionCreators","setFilterData","SET_FILTER_DATA","allActionCreators","useActions","useDispatch","bindActionCreators","FilterSelect","options","onChange","value","name","defaultValue","isSearchable","FilterInput","label","placeholder","className","styles","FilterInput_Wrapper","FilterInput_Label","Filter","state","filter","statusOptions","genderOptions","useState","setName","setStatus","setGender","species","setSpecies","setType","Filter_Header","Filter_Title","Filter_Body","Filter_Item","option","e","target","Filter_Actions","classNames","Filter_Btn","Filter_Btn_Apply","onClick","Filter_Btn_Clear","CharactersItem","string","CharacterItem","CharacterItem_ImageWrapper","CharacterItem_Image","src","image","alt","CharacterItem_InfoWrapper","CharacterItem_Name","CharacterItem_InfoText","charAt","toUpperCase","slice","CharacterItem_Actions","CharacterItem_Btn","CharactersList","onCharacterView","map","PaginationComponent","currentPage","totalPages","onPageChange","Pagination_Wrapper","Pagination_Item","Pagination_Nav","Pagination_Item_Active","Pagination_Separator","Modal","onClose","Modal_Wrapper","Modal_Body","stopPropagation","Modal_CloseBtn","Modal_Title","Modal_ImageWrapper","Modal_Image","Modal_InfoList","Modal_InfoList_Item","HomePage","pagesCount","isModalOpen","selectedCharacter","filterData","useEffect","HomePage_Container","HomePage_ContentWrapper","HomePage_ContentItem","HomePage_Footer","Pagination","routes","path","component","exact","AppRouter","route","to","AppBar","AppBar_Container","AppBar_LogoWrapper","HOME","AppBar_LogoImage","logo","App","initialState","charactersReducer","action","filterReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.267eb062.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal_Wrapper\":\"Modal_Modal_Wrapper__35qKe\",\"Modal_Body\":\"Modal_Modal_Body__2Q-go\",\"Modal_Title\":\"Modal_Modal_Title__2_y7F\",\"Modal_Image\":\"Modal_Modal_Image__3u_L0\",\"Modal_CloseBtn\":\"Modal_Modal_CloseBtn__1nsAf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CharacterItem\":\"CharactersItem_CharacterItem__PRQ0H\",\"CharacterItem_ImageWrapper\":\"CharactersItem_CharacterItem_ImageWrapper__1GzXb\",\"CharacterItem_Image\":\"CharactersItem_CharacterItem_Image__3dlGR\",\"CharacterItem_InfoWrapper\":\"CharactersItem_CharacterItem_InfoWrapper__3gRzF\",\"CharacterItem_Name\":\"CharactersItem_CharacterItem_Name__3R7dD\",\"CharacterItem_InfoText\":\"CharactersItem_CharacterItem_InfoText__1Xjq4\",\"CharacterItem_Actions\":\"CharactersItem_CharacterItem_Actions__3yDZn\",\"CharacterItem_Btn\":\"CharactersItem_CharacterItem_Btn__jOOEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePage\":\"HomePage_HomePage__2cPEp\",\"HomePage_Container\":\"HomePage_HomePage_Container__1wLL-\",\"HomePage_ContentWrapper\":\"HomePage_HomePage_ContentWrapper__2fD8I\",\"HomePage_ContentItem\":\"HomePage_HomePage_ContentItem__b2Jhm\",\"HomePage_Footer\":\"HomePage_HomePage_Footer__WKQ2D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__1kkiM\",\"AppBar_Container\":\"AppBar_AppBar_Container__64Qs6\",\"AppBar_LogoWrapper\":\"AppBar_AppBar_LogoWrapper__v-PuS\",\"AppBar_LogoImage\":\"AppBar_AppBar_LogoImage__23Qw2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"FilterInput_FilterInput__23CY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CharactersList\":\"CharactersList_CharactersList__1LtpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination_Wrapper\":\"Pagination_Pagination_Wrapper__60DyX\",\"Pagination_Separator\":\"Pagination_Pagination_Separator__iPwtC\",\"Pagination_Item\":\"Pagination_Pagination_Item__27tWw\",\"Pagination_Item_Active\":\"Pagination_Pagination_Item_Active__VqKkZ\",\"Pagination_Nav\":\"Pagination_Pagination_Nav__1skTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__1hJWz\",\"Filter_Title\":\"Filter_Filter_Title__1xvKE\",\"Filter_Item\":\"Filter_Filter_Item__1GY1Y\",\"Filter_Actions\":\"Filter_Filter_Actions__1q4q-\",\"Filter_Btn\":\"Filter_Filter_Btn__2dxHZ\",\"Filter_Btn_Apply\":\"Filter_Filter_Btn_Apply__15bX7\",\"Filter_Btn_Clear\":\"Filter_Filter_Btn_Clear__28KZa\"};","import { ICharacter } from '../ICharacter';\n\nexport interface CharacterState {\n    isLoading: boolean;\n    error: string;\n    characters: ICharacter[];\n    pagesCount: number;\n    currentPage: number;\n    isModalOpen: boolean;\n    selectedCharacter?: ICharacter;\n}\n\nexport enum CharactersActionEnum {\n    SET_IS_LOADING = 'SET_IS_LOADING',\n    SET_ERROR = 'SET_ERROR',\n    SET_CHARACTERS = 'SET_CHARACTERS',\n    SET_PAGES_COUNT = 'SET_PAGES_COUNT',\n    SET_CURRENT_PAGE = 'SET_CURRENT_PAGE',\n    SET_SELECTED_CHARACTER = 'SET_SELECTED_CHARACTER',\n    SET_IS_MODAL_OPEN = 'SET_IS_MODAL_OPEN',\n}\n\nexport type SetIsLoadingAction = {\n    type: CharactersActionEnum.SET_IS_LOADING;\n    payload: boolean;\n};\n\nexport type SetErrorAction = {\n    type: CharactersActionEnum.SET_ERROR;\n    payload: string;\n};\n\nexport type SetCharactersAction = {\n    type: CharactersActionEnum.SET_CHARACTERS;\n    payload: ICharacter[];\n};\n\nexport type SetPagesCountAction = {\n    type: CharactersActionEnum.SET_PAGES_COUNT;\n    payload: number;\n};\n\nexport type SetCurrentPageAction = {\n    type: CharactersActionEnum.SET_CURRENT_PAGE;\n    payload: number;\n};\n\nexport type SetIsModalOpenAction = {\n    type: CharactersActionEnum.SET_IS_MODAL_OPEN;\n    payload: boolean;\n};\n\nexport type SetSelectedCharacter = {\n    type: CharactersActionEnum.SET_SELECTED_CHARACTER;\n    payload: ICharacter;\n};\n\nexport type CharactersAction =\n    | SetCharactersAction\n    | SetIsLoadingAction\n    | SetErrorAction\n    | SetPagesCountAction\n    | SetCurrentPageAction\n    | SetIsModalOpenAction\n    | SetSelectedCharacter;\n","import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\n\r\nimport {RootState} from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import { IOption } from '../IOption';\nimport { IFilterData } from '../IFilterData';\n\nexport interface FilterState {\n    statusOptions: IOption[];\n    genderOptions: IOption[];\n    filterData: IFilterData;\n}\n\nexport enum FilterActionEnum {\n    SET_FILTER_DATA = 'SET_FILTER_DATA',\n}\n\nexport type SetFilterDataAction = {\n    type: FilterActionEnum.SET_FILTER_DATA;\n    payload: IFilterData;\n};\n\nexport type FilterAction = SetFilterDataAction;\n","import axios, { AxiosResponse } from 'axios';\nimport { IResponse } from '../types/IResponse';\nimport { IQueryParams } from '../types/IQueryParams';\nimport { ICharacter } from '../types/ICharacter';\n\nexport default class CharactersService {\n    static getCharacters(\n        params: IQueryParams\n    ): Promise<AxiosResponse<IResponse>> {\n        return axios.get('https://rickandmortyapi.com/api/character/', {\n            params: {\n                ...params,\n                gender: params.gender === 'All' ? '' : params.gender,\n                status: params.status === 'All' ? '' : params.status,\n            },\n        });\n    }\n\n    static getSingleCharacter(id: number): Promise<AxiosResponse<ICharacter>> {\n        return axios.get(`https://rickandmortyapi.com/api/character/${id}`);\n    }\n}\n","import {\n    CharactersActionEnum,\n    SetCharactersAction,\n    SetCurrentPageAction,\n    SetErrorAction,\n    SetIsLoadingAction,\n    SetIsModalOpenAction,\n    SetPagesCountAction,\n    SetSelectedCharacter,\n} from '../../types/store/characters';\nimport { AppDispatch } from '../index';\nimport { ICharacter } from '../../types/ICharacter';\nimport { IQueryParams } from '../../types/IQueryParams';\n\nimport CharactersService from '../../api/CharactersService';\n\nexport const CharactersActionCreators = {\n    setCharacters: (characters: ICharacter[]): SetCharactersAction => ({\n        type: CharactersActionEnum.SET_CHARACTERS,\n        payload: characters,\n    }),\n    setSelectedCharacter: (character: ICharacter): SetSelectedCharacter => ({\n        type: CharactersActionEnum.SET_SELECTED_CHARACTER,\n        payload: character,\n    }),\n    setIsLoading: (isLoading: boolean): SetIsLoadingAction => ({\n        type: CharactersActionEnum.SET_IS_LOADING,\n        payload: isLoading,\n    }),\n    setError: (error: string): SetErrorAction => ({\n        type: CharactersActionEnum.SET_ERROR,\n        payload: error,\n    }),\n    setPagesCount: (count: number): SetPagesCountAction => ({\n        type: CharactersActionEnum.SET_PAGES_COUNT,\n        payload: count,\n    }),\n    setCurrentPage: (page: number): SetCurrentPageAction => ({\n        type: CharactersActionEnum.SET_CURRENT_PAGE,\n        payload: page,\n    }),\n    setIsModalOpen: (isOpen: boolean): SetIsModalOpenAction => ({\n        type: CharactersActionEnum.SET_IS_MODAL_OPEN,\n        payload: isOpen,\n    }),\n    fetchCharacters:\n        (queryParams: IQueryParams = { page: 1 }) =>\n        async (dispatch: AppDispatch) => {\n            try {\n                dispatch(CharactersActionCreators.setIsLoading(true));\n                dispatch(CharactersActionCreators.setError(''));\n\n                const response = await CharactersService.getCharacters(\n                    queryParams\n                );\n\n                dispatch(\n                    CharactersActionCreators.setPagesCount(\n                        response.data.info.pages\n                    )\n                );\n                dispatch(\n                    CharactersActionCreators.setCharacters(\n                        response.data.results\n                    )\n                );\n            } catch (e) {\n                dispatch(CharactersActionCreators.setError('Nothing found'));\n            } finally {\n                dispatch(CharactersActionCreators.setIsLoading(false));\n            }\n        },\n    fetchSingleCharacter: (id: number) => async (dispatch: AppDispatch) => {\n        try {\n            const response = await CharactersService.getSingleCharacter(id);\n            dispatch(\n                CharactersActionCreators.setSelectedCharacter(response.data)\n            );\n        } catch (e) {\n            console.log(e);\n        }\n    },\n};\n","import {\n    FilterActionEnum,\n    SetFilterDataAction,\n} from '../../types/store/filter';\nimport { IFilterData } from '../../types/IFilterData';\n\nexport const FilterActionCreators = {\n    setFilterData: (data: IFilterData): SetFilterDataAction => ({\n        type: FilterActionEnum.SET_FILTER_DATA,\n        payload: data,\n    }),\n};\n","import React from 'react';\n\nimport HomePage from '../pages/HomePage';\n\nexport interface IRoute {\n    path: string;\n    component: React.ComponentType;\n    exact: boolean;\n}\n\nexport enum RouteNames {\n    HOME = '/',\n}\n\nexport const routes: IRoute[] = [\n    {\n        path: '/',\n        component: HomePage,\n        exact: true,\n    },\n];\n","import { CharactersActionCreators } from './charactersActions';\nimport { FilterActionCreators } from './filterActions';\n\nexport const allActionCreators = {\n    ...CharactersActionCreators,\n    ...FilterActionCreators,\n};\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { allActionCreators } from '../store/actions';\n\nexport const useActions = () => {\n    const dispatch = useDispatch();\n    return bindActionCreators(allActionCreators, dispatch);\n};","import React, { FC } from 'react';\nimport Select from 'react-select';\n\nimport { IOption } from '../../../types/IOption';\n\ninterface FilterSelectProps {\n    readonly options: IOption[];\n    readonly value: IOption;\n    readonly name?: string;\n    readonly onChange: (option: IOption | null) => void;\n}\n\nconst FilterSelect: FC<FilterSelectProps> = ({\n    options,\n    onChange,\n    value,\n    name,\n}) => {\n    return (\n        <>\n            {name && <span>{name}</span>}\n            <Select\n                value={!!value.value ? value : options[0]}\n                options={options}\n                defaultValue={options[0]}\n                isSearchable={false}\n                onChange={onChange}\n            />\n        </>\n    );\n};\n\nexport default FilterSelect;\n","import React, { FC } from 'react';\n\nimport styles from './index.module.scss';\n\ninterface FilterInputProps {\n    readonly label?: string;\n    readonly placeholder?: string;\n    readonly value: string;\n    readonly onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst FilterInput: FC<FilterInputProps> = ({\n    label,\n    value,\n    placeholder,\n    onChange,\n}) => {\n    return (\n        <div className={styles.FilterInput_Wrapper}>\n            <label>\n                {!!label && (\n                    <span className={styles.FilterInput_Label}>{label}</span>\n                )}\n                <input\n                    className={styles.FilterInput}\n                    type=\"text\"\n                    value={value}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                />\n            </label>\n        </div>\n    );\n};\n\nexport default FilterInput;\n","import React, { FC, useState } from 'react';\nimport classNames from 'classnames';\n\nimport styles from './index.module.scss';\n\nimport { IOption } from '../../types/IOption';\nimport { IFilterData } from '../../types/IFilterData';\n\nimport { useActions } from '../../hooks/useActions';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\n\nimport FilterSelect from './FilterSelect';\nimport FilterInput from './FilterInput';\n\nconst Filter: FC = () => {\n    const { statusOptions, genderOptions } = useTypedSelector(\n        (state) => state.filter\n    );\n\n    const { setFilterData, setCurrentPage } = useActions();\n\n    const [name, setName] = useState<string>('');\n    const [status, setStatus] = useState<string>('');\n    const [gender, setGender] = useState<string>('');\n    const [species, setSpecies] = useState<string>('');\n    const [type, setType] = useState<string>('');\n\n    const onStatusChange = (option: IOption | null) => {\n        !!option?.value && setStatus(option.value);\n    };\n\n    const onGenderChange = (option: IOption | null) => {\n        !!option?.value && setGender(option.value);\n    };\n\n    const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setName(e.target.value);\n    };\n\n    const onTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setType(e.target.value);\n    };\n\n    const onSpeciesChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setSpecies(e.target.value);\n    };\n\n    const onClearFilter = () => {\n        setStatus('');\n        setGender('');\n        setName('');\n        setType('');\n        setSpecies('');\n        setFilterData({} as IFilterData);\n    };\n\n    const onApplyFilter = () => {\n        setCurrentPage(1);\n        setFilterData({ name, species, type, gender, status });\n    };\n\n    return (\n        <div className={styles.Filter}>\n            <div className={styles.Filter_Header}>\n                <h5 className={styles.Filter_Title}>Characters filter</h5>\n            </div>\n            <div className={styles.Filter_Body}>\n                <div className={styles.Filter_Item}>\n                    <FilterSelect\n                        options={statusOptions}\n                        onChange={onStatusChange}\n                        value={{ value: status, label: status }}\n                        name=\"Status\"\n                    />\n                </div>\n                <div className={styles.Filter_Item}>\n                    <FilterSelect\n                        options={genderOptions}\n                        onChange={onGenderChange}\n                        value={{ value: gender, label: gender }}\n                        name=\"Gender\"\n                    />\n                </div>\n                <div className={styles.Filter_Item}>\n                    <FilterInput\n                        value={name}\n                        onChange={onNameChange}\n                        label=\"Name\"\n                        placeholder=\"Enter part of name\"\n                    />\n                </div>\n                <div className={styles.Filter_Item}>\n                    <FilterInput\n                        value={type}\n                        onChange={onTypeChange}\n                        label=\"Type\"\n                        placeholder=\"Enter part of type\"\n                    />\n                </div>\n                <div className={styles.Filter_Item}>\n                    <FilterInput\n                        value={species}\n                        onChange={onSpeciesChange}\n                        label=\"Species\"\n                        placeholder=\"Enter part of species\"\n                    />\n                </div>\n            </div>\n            <div className={styles.Filter_Actions}>\n                <button\n                    className={classNames(\n                        styles.Filter_Btn,\n                        styles.Filter_Btn_Apply\n                    )}\n                    onClick={onApplyFilter}\n                >\n                    Apply\n                </button>\n                <button\n                    className={classNames(\n                        styles.Filter_Btn,\n                        styles.Filter_Btn_Clear\n                    )}\n                    onClick={onClearFilter}\n                >\n                    Clear All\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Filter;\n","import React, { FC } from 'react';\n\nimport styles from './index.module.scss';\n\nimport { ICharacter } from '../../../../types/ICharacter';\n\nimport { capitalize } from '../../../../utils/capitalize';\n\ninterface CharactersItemProps {\n    readonly character: ICharacter;\n    readonly onClick: (id: number) => void;\n}\n\nconst CharactersItem: FC<CharactersItemProps> = ({ character, onClick }) => {\n    return (\n        <div className={styles.CharacterItem}>\n            <div className={styles.CharacterItem_ImageWrapper}>\n                <img\n                    className={styles.CharacterItem_Image}\n                    src={character.image}\n                    alt={character.name}\n                />\n            </div>\n            <div className={styles.CharacterItem_InfoWrapper}>\n                <h4 className={styles.CharacterItem_Name}>{character.name}</h4>\n                <span className={styles.CharacterItem_InfoText}>\n                    {capitalize(character.status)} - {character.species}\n                </span>\n                <span className={styles.CharacterItem_InfoText}>\n                    Gender: {character.gender}\n                </span>\n                <span className={styles.CharacterItem_InfoText}>\n                    Type: {character.type ? character.type : 'No info'}\n                </span>\n                <div className={styles.CharacterItem_Actions}>\n                    <button\n                        className={styles.CharacterItem_Btn}\n                        onClick={() => onClick(character.id)}\n                    >\n                        View Details\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CharactersItem;\n","export const capitalize = (string: string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n}","import React, { FC } from 'react';\n\nimport styles from './index.module.scss';\n\nimport { useActions } from '../../../../hooks/useActions';\n\nimport { ICharacter } from '../../../../types/ICharacter';\n\nimport CharactersItem from '../CharactersItem';\n\ninterface CharactersListProps {\n    readonly characters: ICharacter[];\n}\n\nconst CharactersList: FC<CharactersListProps> = ({ characters }) => {\n    const { fetchSingleCharacter, setIsModalOpen } = useActions();\n\n    const onCharacterView = (id: number) => {\n        fetchSingleCharacter(id);\n        setIsModalOpen(true);\n    };\n\n    return (\n        <div className={styles.CharactersList}>\n            {characters.map((character) => (\n                <CharactersItem\n                    key={character.id}\n                    character={character}\n                    onClick={onCharacterView}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default CharactersList;\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\n\nimport styles from './index.module.scss';\n\nexport interface PaginationProps {\n    readonly currentPage: number;\n    readonly totalPages: number;\n    readonly onPageChange: (currentPage: number) => void;\n}\n\nexport const PaginationComponent: FC<PaginationProps> = ({\n    currentPage,\n    totalPages,\n    onPageChange,\n}) => {\n    if (totalPages === 1) {\n        return null;\n    }\n\n    return (\n        <div className={styles.Pagination_Wrapper}>\n            {currentPage !== 1 && (\n                <button\n                    onClick={() => onPageChange(currentPage - 1)}\n                    type=\"button\"\n                    className={classNames(\n                        styles.Pagination_Item,\n                        styles.Pagination_Nav\n                    )}\n                >\n                    &lt;\n                </button>\n            )}\n            <button\n                onClick={() => onPageChange(1)}\n                type=\"button\"\n                className={classNames(styles.Pagination_Item, {\n                    [styles.Pagination_Item_Active]: currentPage === 1,\n                })}\n            >\n                {1}\n            </button>\n\n            {currentPage > 3 && (\n                <div className={styles.Pagination_Separator}>...</div>\n            )}\n\n            {currentPage === totalPages && totalPages > 3 && (\n                <button\n                    onClick={() => onPageChange(currentPage - 2)}\n                    type=\"button\"\n                    className={styles.Pagination_Item}\n                >\n                    {currentPage - 2}\n                </button>\n            )}\n            {currentPage > 2 && (\n                <button\n                    onClick={() => onPageChange(currentPage - 1)}\n                    type=\"button\"\n                    className={styles.Pagination_Item}\n                >\n                    {currentPage - 1}\n                </button>\n            )}\n            {currentPage !== 1 && currentPage !== totalPages && (\n                <button\n                    onClick={() => onPageChange(currentPage)}\n                    type=\"button\"\n                    className={classNames(\n                        styles.Pagination_Item,\n                        styles.Pagination_Item_Active\n                    )}\n                >\n                    {currentPage}\n                </button>\n            )}\n            {currentPage < totalPages - 1 && (\n                <button\n                    onClick={() => onPageChange(currentPage + 1)}\n                    type=\"button\"\n                    className={styles.Pagination_Item}\n                >\n                    {currentPage + 1}\n                </button>\n            )}\n            {currentPage === 1 && totalPages > 3 && (\n                <button\n                    onClick={() => onPageChange(currentPage + 2)}\n                    type=\"button\"\n                    className={styles.Pagination_Item}\n                >\n                    {currentPage + 2}\n                </button>\n            )}\n\n            {currentPage < totalPages - 2 && (\n                <div className={styles.Pagination_Separator}>...</div>\n            )}\n\n            <button\n                onClick={() => onPageChange(totalPages)}\n                type=\"button\"\n                className={classNames(styles.Pagination_Item, {\n                    [styles.Pagination_Item_Active]: currentPage === totalPages,\n                })}\n            >\n                {totalPages}\n            </button>\n            {currentPage !== totalPages && (\n                <button\n                    onClick={() => onPageChange(currentPage + 1)}\n                    type=\"button\"\n                    className={classNames(\n                        styles.Pagination_Item,\n                        styles.Pagination_Nav\n                    )}\n                >\n                    &gt;\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default PaginationComponent;\n","import React, { FC } from 'react';\n\nimport styles from './index.module.scss';\nimport { ICharacter } from '../../types/ICharacter';\n\ninterface ModalProps {\n    readonly character?: ICharacter;\n    readonly onClose: () => void;\n}\n\nconst Modal: FC<ModalProps> = ({ character, onClose }) => {\n    return (\n        <div className={styles.Modal_Wrapper} onClick={onClose}>\n            <div\n                className={styles.Modal_Body}\n                onClick={(e: React.MouseEvent<HTMLDivElement>) =>\n                    e.stopPropagation()\n                }\n            >\n                <button className={styles.Modal_CloseBtn} onClick={onClose} />\n                <h4 className={styles.Modal_Title}>{character?.name}</h4>\n                <div className={styles.Modal_ImageWrapper}>\n                    <img\n                        className={styles.Modal_Image}\n                        src={character?.image}\n                        alt={character?.name}\n                    />\n                </div>\n                <ul className={styles.Modal_InfoList}>\n                    <li className={styles.Modal_InfoList_Item}>\n                        <span>ID: </span>\n                        <span>{character?.id}</span>\n                    </li>\n                    <li className={styles.Modal_InfoList_Item}>\n                        <span>Status: </span>\n                        <span>{character?.status}</span>\n                    </li>\n                    <li className={styles.Modal_InfoList_Item}>\n                        <span>Gender: </span>\n                        <span>{character?.gender}</span>\n                    </li>\n                    <li className={styles.Modal_InfoList_Item}>\n                        <span>Species: </span>\n                        <span>{character?.species}</span>\n                    </li>\n                    <li className={styles.Modal_InfoList_Item}>\n                        <span>Type: </span>\n                        <span>\n                            {character?.type ? character.type : 'No info'}\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Modal;\n","import React, { FC, useEffect } from 'react';\n\nimport styles from './index.module.scss';\n\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport { useActions } from '../../hooks/useActions';\n\nimport Filter from '../../components/Filter';\nimport CharactersList from './components/CharactersList';\nimport PaginationComponent from '../../components/Pagination';\nimport Modal from '../../components/Modal';\nimport {ICharacter} from \"../../types/ICharacter\";\n\nconst HomePage: FC = () => {\n    const { fetchCharacters, setCurrentPage, setIsModalOpen, setSelectedCharacter } = useActions();\n\n    const {\n        characters,\n        pagesCount,\n        isLoading,\n        error,\n        currentPage,\n        isModalOpen,\n        selectedCharacter,\n    } = useTypedSelector((state) => state.characters);\n    const { filterData } = useTypedSelector((state) => state.filter);\n\n    useEffect(() => {\n        fetchCharacters({ ...filterData, page: currentPage });\n    }, [currentPage, filterData]);\n\n    const onPageChange = (currentPage: number) => {\n        setCurrentPage(currentPage);\n    };\n\n    const onModalClose = () => {\n        setIsModalOpen(false);\n        setSelectedCharacter({} as ICharacter)\n    };\n\n    return (\n        <div className={styles.HomePage_Container}>\n            {isModalOpen && (\n                <Modal character={selectedCharacter} onClose={onModalClose} />\n            )}\n            <div className={styles.HomePage_ContentWrapper}>\n                <div className={styles.HomePage_ContentItem}>\n                    <Filter />\n                </div>\n                <div className={styles.HomePage_ContentItem}>\n                    {isLoading && <h1>Loading...</h1>}\n                    {error && <h1>{error}</h1>}\n                    {!isLoading && !error && (\n                        <CharactersList characters={characters} />\n                    )}\n                </div>\n            </div>\n            <div className={styles.HomePage_Footer}>\n                {!error && (\n                    <PaginationComponent\n                        currentPage={currentPage}\n                        totalPages={pagesCount}\n                        onPageChange={onPageChange}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n","import React, { FC } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { routes } from '../../router';\n\nconst AppRouter: FC = () => {\n    return (\n        <Switch>\n            {routes.map((route) => (\n                <Route\n                    key={route.path}\n                    path={route.path}\n                    component={route.component}\n                    exact={route.exact}\n                />\n            ))}\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n};\n\nexport default AppRouter;\n","export default __webpack_public_path__ + \"static/media/logo.394fe7bc.jpg\";","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport logo from './logo.jpg';\n\nimport styles from './index.module.scss';\n\nimport { RouteNames } from '../../router';\n\nconst AppBar: FC = () => {\n    return (\n        <div className={styles.AppBar}>\n            <div className={styles.AppBar_Container}>\n                <div className={styles.AppBar_LogoWrapper}>\n                    <Link to={RouteNames.HOME}>\n                        <img\n                            className={styles.AppBar_LogoImage}\n                            src={logo}\n                            alt=\"Rick and Morty logo\"\n                        />\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AppBar;\n","import React from 'react';\n\nimport 'normalize.css';\nimport './App.scss';\n\nimport AppRouter from './components/AppRouter';\nimport AppBar from './components/AppBar';\n\nfunction App() {\n    return (\n        <>\n            <AppBar />\n            <AppRouter />\n        </>\n    );\n}\n\nexport default App;\n","import {\n    CharactersAction,\n    CharactersActionEnum,\n    CharacterState,\n} from '../../types/store/characters';\n\nconst initialState: CharacterState = {\n    isLoading: false,\n    error: '',\n    characters: [],\n    pagesCount: 0,\n    currentPage: 1,\n    isModalOpen: false,\n};\n\nconst charactersReducer = (\n    state = initialState,\n    action: CharactersAction\n): CharacterState => {\n    switch (action.type) {\n        case CharactersActionEnum.SET_IS_LOADING:\n            return { ...state, isLoading: action.payload };\n        case CharactersActionEnum.SET_ERROR:\n            return { ...state, error: action.payload };\n        case CharactersActionEnum.SET_CHARACTERS:\n            return { ...state, characters: action.payload };\n        case CharactersActionEnum.SET_PAGES_COUNT:\n            return { ...state, pagesCount: action.payload };\n        case CharactersActionEnum.SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.payload };\n        case CharactersActionEnum.SET_IS_MODAL_OPEN:\n            return { ...state, isModalOpen: action.payload };\n        case CharactersActionEnum.SET_SELECTED_CHARACTER:\n            return { ...state, selectedCharacter: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default charactersReducer;\n","import {\n    FilterAction,\n    FilterActionEnum,\n    FilterState,\n} from '../../types/store/filter';\n\nconst initialState: FilterState = {\n    genderOptions: [\n        { value: 'All', label: 'All' },\n        { value: 'Male', label: 'Male' },\n        { value: 'Female', label: 'Female' },\n        { value: 'Unknown', label: 'Unknown' },\n        { value: 'Genderless ', label: 'Genderless' },\n    ],\n    statusOptions: [\n        { value: 'All', label: 'All' },\n        { value: 'Alive', label: 'Alive' },\n        { value: 'Dead', label: 'Dead' },\n        { value: 'Unknown', label: 'Unknown' },\n    ],\n    filterData: {\n        type: '',\n        name: '',\n        species: '',\n        status: '',\n        gender: '',\n    },\n};\n\nconst filterReducer = (\n    state = initialState,\n    action: FilterAction\n): FilterState => {\n    switch (action.type) {\n        case FilterActionEnum.SET_FILTER_DATA:\n            return { ...state, filterData: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport charactersReducer from './charactersReducer';\nimport filterReducer from './filterReducer';\n\nconst rootReducer = combineReducers({\n    characters: charactersReducer,\n    filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\n\nimport { store } from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}